name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: weather_forecast_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    
    - name: Set up database
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
    
    - name: Run tests
      run: bundle exec rspec
      env:
        OPENWEATHER_API_KEY: test_key
        REDIS_URL: redis://localhost:6379/0
        RAILS_ENV: test
    
    - name: Run RuboCop
      run: bundle exec rubocop
    
    - name: Run Brakeman
      run: bundle exec brakeman --no-pager

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    
    - name: Run security audit
      run: bundle audit --update
    
    - name: Run Brakeman security scan
      run: bundle exec brakeman --no-pager

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    
    - name: Build Docker image
      run: |
        docker build -t weather-forecast:${{ github.sha }} .
        docker tag weather-forecast:${{ github.sha }} weather-forecast:latest
    
    - name: Run container tests
      run: |
        docker run --rm weather-forecast:latest bundle exec rspec